version: "2"

services:
  web:
    image: nginx:latest
    env_file: .env
    ports:
      - "${HTTP_BINDED_PORT}:80"
      - "${HTTPS_BINDED_PORT}:443"
    tty: true
    volumes:
      - .:/var/www/html
      - ./.docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/config/nginx/ssl:/etc/nginx/ssl
      - ./.docker/config/nginx/logs:/var/log/nginx
      - ${NGINX_CONFIG_FILE}:/etc/nginx/sites-enabled/default.conf
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    depends_on:
      - php
      - mysql
    networks:
      ## BEGIN webserver_network_ip ##
      - back
      ## END webserver_network_ip ##

  php:
    image: summasolutions/php:${PHP_VERSION}
    ports:
      - 9001
    volumes:
      - ./.docker/config/php/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      #- ./.docker/config/php/ext-xdebug.ini:/usr/local/etc/php/conf.d/ext-xdebug.ini
      - ./.docker/config/php/ext-ioncube.ini:/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini
      - ./.docker/config/php/volumes/php-fpm/logs:/var/log/php-fpm
      - ./.docker/config/php/volumes/logs:/var/log/supervisor
      - .:/var/www/html
      #- .docker/config/php/crontab/cronfile:/etc/cron.d/cronfile
      #- .docker/config/php/supervisor/conf.d:/etc/supervisor/conf.d
    env_file: .env
    environment:
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
    user: www-data
    links:
      - mysql
    networks:
      - back

  mysql:
    image: mariadb:${MYSQL_VERSION}
    env_file: .env
    ports:
      - "${DATABASE_BINDED_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_NAME: mysql
    volumes:
      - "./.docker/config/mysql/my.cnf:/etc/mysql/my.cnf"
      - "./.docker/config/mysql/dumps:/dumps"
      - "${MYSQL_CONFIG_FILE}:/etc/mysql/conf.d"
      - gm-volume-db:/var/lib/mysql:delegated
    networks:
      - back

  phpc:
    build:
      context: ./.docker/config/php-cli
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
      #- ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    stdin_open: true
    tty: true
    networks:
      - back

  elasticsearch:
    image: summasolutions/elasticsearch:${ES_VERSION}
    env_file: .env
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms${ES_MEMORY} -Xmx${ES_MEMORY}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "./.docker/config/elasticsearch/volumes/elasticsearch:/usr/share/elasticsearch/data"
    networks:
      - back

  redis-cache:
    image: redis:${REDIS_CACHE_VERSION}
    env_file: .env
    ports:
      - "6379"
    networks:
      - back

  redis-session:
    image: redis:${REDIS_SESSION_VERSION}
    env_file: .env
    ports:
      - "6379"
    networks:
      - back

  redis-fpc:
    image: redis:${REDIS_FPC_VERSION}
    env_file: .env
    ports:
      - "6379"
    networks:
      - back

  mailhog:
    image: mailhog/mailhog
    env_file: .env
    hostname: "mailhog"
    ports:
      - 1025
      - "${MAILHOG_BINDED_PORT}:8025"
    networks:
      - back

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - back

volumes:
  gm-volume-db:
  rabbitmqdata:

networks:
  ## BEGIN networks ##
  back:
    driver: bridge
  ## END networks ##

